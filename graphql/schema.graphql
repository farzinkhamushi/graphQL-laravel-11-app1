type User {
  id:ID!
  name: String!
  email:String!
  created_at:String!
  updated_at:String!
}

type Query{
  users:[User!]! @all
  me:User! @guard @auth
}

input UserCreateInput{
  name: String!
  email: String!
  password: String!
}

input UserLoginInput{
  email: String!
  password: String!
}

type UserResponse{
  success: Boolean!
  message: [String!]!
  token: String
  user: User
}

# mutation to store and update, and login and logout the user

type Mutation{
  createUser(input: UserCreateInput ): UserResponse @field(resolver: "App\\GraphQL\\Mutations\\RegisterUser")
  loginUser(input: UserLoginInput ): UserResponse @field(resolver: "App\\GraphQL\\Mutations\\LoginUser")
}